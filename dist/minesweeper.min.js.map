{"version":3,"sources":["minesweeper.min.js"],"names":["angular","module","MinesweeperService","this","reset","service","$inject","MinesweeperController","$scope","DEFAULT_COLS","DEFAULT_ROWS","MAX_COLS","MAX_ROWS","$watch","minePercent","get","cols","rows","buildBoard","cells","cellCount","i","cell","hasFlag","hasMine","Math","random","isClear","col","row","floor","j","k","touches","countTouches","checkEnd","clearNeighbors","neighbors","getNeighbors","neighborsCount","length","neighbor","clearCell","click","event","which","setFlag","alert","neighborCount","alpha","beta","value","neighborFunctions","neighborFunctionsCount","neighborFunction","push","getNeighborBottom","getNeighborBottomLeft","getNeighborBottomRight","getNeighborLeft","getNeighborRight","getNeighborTop","getNeighborTopLeft","getNeighborTopRight","init","controller","directive","controllerAs","restrict","scope","template"],"mappings":"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","file":"minesweeper.min.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular.module('minesweeper', []);\n})();\n(function() {\n    'use strict';\n\n    angular.module('minesweeper').service(\n        'MinesweeperService',\n        MinesweeperService\n    );\n\n    MinesweeperService.$inject = [];\n\n    function MinesweeperService() {\n        var MinesweeperService = this;\n\n        MinesweeperService.reset = reset;\n        function reset() {\n\n        }\n        \n        MinesweeperService.reset();\n\n        return MinesweeperService;\n    }\n})();\n(function() {\n    'use strict';\n\n    angular.module('minesweeper').controller(\n        'MinesweeperController',\n        MinesweeperController\n    );\n\n    MinesweeperController.$inject = [\n        '$scope',\n        'MinesweeperService'\n    ];\n\n    function MinesweeperController(\n        $scope,\n        MinesweeperService\n    ) {\n        var MinesweeperController = this;\n\n        MinesweeperController.DEFAULT_COLS = 5;\n        MinesweeperController.DEFAULT_ROWS = 5;\n\n        MinesweeperController.MAX_COLS = 144;\n        MinesweeperController.MAX_ROWS = 144;\n\n        $scope.$watch(\n            'minePercent',\n            function(minePercent) {\n                MinesweeperController.minePercent = MinesweeperController.get(\n                    minePercent,\n                    0.15\n                );\n            }\n        );\n\n        $scope.$watch(\n            'cols',\n            function(cols) {\n                MinesweeperController.cols = MinesweeperController.get(\n                    cols,\n                    MinesweeperController.DEFAULT_COLS\n                );\n\n                if (MinesweeperController.cols > MinesweeperController.MAX_COLS) {\n                    MinesweeperController.cols = MinesweeperController.MAX_COLS;\n                }\n            }\n        );\n\n        $scope.$watch(\n            'rows',\n            function(rows) {\n                MinesweeperController.rows = MinesweeperController.get(\n                    rows,\n                    MinesweeperController.DEFAULT_ROWS\n                );\n\n                if (MinesweeperController.cols > MinesweeperController.MAX_ROWS) {\n                    MinesweeperController.cols = MinesweeperController.MAX_ROWS;\n                }\n\n                MinesweeperController.buildBoard();\n            }\n        );\n\n        MinesweeperController.buildBoard = buildBoard;\n        function buildBoard() {\n            MinesweeperController.cells = [];\n\n            MinesweeperController.cellCount = MinesweeperController.cols * MinesweeperController.rows;\n            for (var i = 0; i < MinesweeperController.cellCount; i++) {\n                var cell = {};\n\n                cell.hasFlag = false;\n                cell.hasMine = Math.random() <= MinesweeperController.minePercent;\n                cell.isClear = false;\n\n                var col = i % MinesweeperController.cols;\n                var row = Math.floor(i / MinesweeperController.cols);\n\n                cell.col = col;\n                cell.row = row;\n\n                if (col === 0) {\n                    MinesweeperController.cells[row] = [];\n                }\n\n                MinesweeperController.cells[row][col] = cell;\n            }\n\n            for (var j = 0; j < MinesweeperController.rows; j++) {\n                for (var k = 0; k < MinesweeperController.cols; k++) {\n                    MinesweeperController.cells[j][k].touches = MinesweeperController.countTouches(\n                        MinesweeperController.cells[j][k]\n                    );\n                }\n            }\n        }\n\n        MinesweeperController.checkEnd = checkEnd;\n        function checkEnd() {\n            for (var i = 0; i < MinesweeperController.rows; i++) {\n                for (var j = 0; j < MinesweeperController.cols; j++) {\n                    if (!MinesweeperController.cells[i][j].isClear) {\n                        if (!MinesweeperController.cells[i][j].hasFlag) {\n                            return false;\n                        } else if (!MinesweeperController.cells[i][j].hasMine) {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            return true;\n        }\n\n        MinesweeperController.clearNeighbors = clearNeighbors;\n        function clearNeighbors(cell) {\n            var neighbors = MinesweeperController.getNeighbors(cell);\n            var neighborsCount = neighbors.length;\n\n            for (var i = 0; i < neighborsCount; i++) {\n                var neighbor = neighbors[i];\n\n                if (!neighbor.isClear && !neighbor.hasMine) {\n                    MinesweeperController.clearCell(neighbor);\n                }\n            }\n        }\n\n        MinesweeperController.clearCell = clearCell;\n        function clearCell(cell) {\n            if (!cell.hasFlag) {\n                cell.isClear = true;\n\n                if (!cell.hasMine) {\n                    if (cell.touches === 0) {\n                        MinesweeperController.clearNeighbors(cell);\n                    }\n                }\n            }\n        }\n\n        MinesweeperController.click = click;\n        function click(event, cell) {\n            if (event.which === 1) {\n                MinesweeperController.clearCell(cell);\n            } else if (event.which === 3) {\n                MinesweeperController.setFlag(cell);\n            }\n\n            var gameOver = MinesweeperController.checkEnd();\n            if (gameOver) {\n                alert('Good game.');\n            }\n        }\n\n        MinesweeperController.countTouches = countTouches;\n        function countTouches(cell) {\n            var touches = 0;\n\n            var neighbors = MinesweeperController.getNeighbors(cell);\n            var neighborCount = neighbors.length;\n\n            for (var i = 0; i < neighborCount; i++) {\n                var neighbor = neighbors[i];\n\n                if (neighbor.hasMine) {\n                    touches++;\n                }\n            }\n\n            return touches;\n        }\n        \n        MinesweeperController.get = get;\n        function get(alpha, beta) {\n            var value = null;\n            \n            if (typeof alpha === 'undefined') {\n                if (typeof beta !== 'undefined') {\n                    value = beta;\n                }\n            }\n\n            return value;\n        }\n\n        MinesweeperController.getNeighbors = getNeighbors;\n        function getNeighbors(cell) {\n            var neighbors = [];\n\n            var neighborFunctions = [\n                'getNeighborBottom',\n                'getNeighborBottomLeft',\n                'getNeighborBottomRight',\n                'getNeighborLeft',\n                'getNeighborRight',\n                'getNeighborTop',\n                'getNeighborTopLeft',\n                'getNeighborTopRight'\n            ];\n\n            var neighborFunctionsCount = neighborFunctions.length;\n\n            for (var i = 0; i < neighborFunctionsCount; i++) {\n                var neighborFunction = neighborFunctions[i];\n\n                var neighbor = MinesweeperController[neighborFunction](cell);\n                if (neighbor !== null) {\n                    neighbors.push(neighbor);\n                }\n            }\n\n            return neighbors;\n        }\n\n        MinesweeperController.getNeighborBottom = getNeighborBottom;\n        function getNeighborBottom(cell) {\n            if (cell.row + 1 !== MinesweeperController.rows) {\n                return MinesweeperController.cells[cell.row + 1][cell.col];\n            }\n\n            return null;\n        }\n\n        MinesweeperController.getNeighborBottomLeft = getNeighborBottomLeft;\n        function getNeighborBottomLeft(cell) {\n            if (cell.col !== 0 && cell.row + 1 !== MinesweeperController.rows) {\n                return MinesweeperController.cells[cell.row + 1][cell.col - 1];\n            }\n\n            return null;\n        }\n\n        MinesweeperController.getNeighborBottomRight = getNeighborBottomRight;\n        function getNeighborBottomRight(cell) {\n            if (cell.col + 1 !== MinesweeperController.cols && cell.row + 1 !== MinesweeperController.rows) {\n                return MinesweeperController.cells[cell.row + 1][cell.col + 1];\n            }\n\n            return null;\n        }\n\n        MinesweeperController.getNeighborLeft = getNeighborLeft;\n        function getNeighborLeft(cell) {\n            if (cell.col !== 0) {\n                return MinesweeperController.cells[cell.row][cell.col - 1];\n            }\n\n            return null;\n        }\n\n        MinesweeperController.getNeighborRight = getNeighborRight;\n        function getNeighborRight(cell) {\n            if (cell.col + 1 !== MinesweeperController.cols) {\n                return MinesweeperController.cells[cell.row][cell.col + 1];\n            }\n\n            return null;\n        }\n\n        MinesweeperController.getNeighborTop = getNeighborTop;\n        function getNeighborTop(cell) {\n            if (cell.row !== 0) {\n                return MinesweeperController.cells[cell.row - 1][cell.col];\n            }\n\n            return null;\n        }\n\n        MinesweeperController.getNeighborTopLeft = getNeighborTopLeft;\n        function getNeighborTopLeft(cell) {\n            if (cell.col !== 0 && cell.row !== 0) {\n                return MinesweeperController.cells[cell.row - 1][cell.col - 1];\n            }\n\n            return null;\n        }\n\n        MinesweeperController.getNeighborTopRight = getNeighborTopRight;\n        function getNeighborTopRight(cell) {\n            if (cell.col + 1 !== MinesweeperController.cols && cell.row !== 0) {\n                return MinesweeperController.cells[cell.row - 1][cell.col + 1];\n            }\n\n            return null;\n        }\n        \n        MinesweeperController.setFlag = setFlag;\n        function setFlag(cell) {\n            if (!cell.isClear) {\n                cell.hasFlag = !cell.hasFlag;\n            }\n        }\n\n        MinesweeperController.reset = reset;\n        function reset() {\n\n        }\n\n        MinesweeperController.init = init;\n        function init() {\n            MinesweeperController.reset();\n        }\n\n        MinesweeperController.init();\n    }\n})();\n(function() {\n    'use strict';\n\n    angular.module('minesweeper').directive(\n        'minesweeper',\n        minesweeper\n    );\n\n    function minesweeper() {\n        return {\n            controller:   'MinesweeperController',\n            controllerAs: 'ctrl',\n            restrict:     'E',\n            scope:        {\n                cols:        '=',\n                minePercent: '=',\n                rows:        '='\n            },\n            template:'<div class=\"row\" data-ng-repeat=\"cols in ctrl.cells\"><div data-ng-repeat=\"cell in cols\" class=\"col cell\" data-ng-class=\"{ \\'clear\\': cell.isClear && !cell.hasMine && cell.touches === 0, \\'mine\\': cell.isClear && cell.hasMine, \\'safe\\': cell.isClear && !cell.hasMine && cell.touches !== 0, \\'flag\\': !cell.isClear && cell.hasFlag, \\'unknown\\': !cell.isClear && !cell.hasFlag, \\'touches-0\\': cell.touches === 0, \\'touches-1\\': cell.touches === 1, \\'touches-2\\': cell.touches === 2, \\'touches-3\\': cell.touches === 3, \\'touches-4\\': cell.touches === 4, \\'touches-5\\': cell.touches === 5, \\'touches-6\\': cell.touches === 6, \\'touches-7\\': cell.touches === 7, \\'touches-8\\': cell.touches === 8 }\" data-ng-mousedown=\"ctrl.click($event, cell)\" oncontextmenu=\"return false\"><p data-ng-if=\"!cell.isClear\">~</p><p data-ng-if=\"cell.isClear\">{{ cell.hasMine ? \\'X\\' : cell.touches }}</p></div></div>'\n        };\n    }\n})();"]}