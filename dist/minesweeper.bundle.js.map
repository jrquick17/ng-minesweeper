{"version":3,"names":[],"mappings":"","sources":["minesweeper.bundle.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function () {\n    'use strict';\n})();\n(function () {\n    'use strict';\n\n    angular.module('minesweeper', []);\n})();\n(function () {\n    'use strict';\n\n    angular.module('minesweeper').service('MinesweeperService', MinesweeperService);\n\n    MinesweeperService.$inject = [];\n\n    function MinesweeperService() {\n        var MinesweeperService = this;\n\n        MinesweeperService.reset = reset;\n        function reset() {}\n\n        MinesweeperService.reset();\n\n        return MinesweeperService;\n    }\n})();\n(function () {\n    'use strict';\n\n    angular.module('minesweeper').controller('MinesweeperController', MinesweeperController);\n\n    MinesweeperController.$inject = ['$scope', 'MinesweeperService'];\n\n    function MinesweeperController($scope, MinesweeperService) {\n        var MinesweeperController = this;\n\n        MinesweeperController.DEFAULT_COLS = 5;\n        MinesweeperController.DEFAULT_ROWS = 5;\n\n        MinesweeperController.MAX_COLS = 144;\n        MinesweeperController.MAX_ROWS = 144;\n\n        $scope.$watch('minePercent', function (minePercent) {\n            MinesweeperController.minePercent = MinesweeperController.get(minePercent, 0.15);\n        });\n\n        $scope.$watch('cols', function (cols) {\n            MinesweeperController.cols = MinesweeperController.get(cols, MinesweeperController.DEFAULT_COLS);\n\n            if (MinesweeperController.cols > MinesweeperController.MAX_COLS) {\n                MinesweeperController.cols = MinesweeperController.MAX_COLS;\n            }\n        });\n\n        $scope.$watch('rows', function (rows) {\n            MinesweeperController.rows = MinesweeperController.get(rows, MinesweeperController.DEFAULT_ROWS);\n\n            if (MinesweeperController.cols > MinesweeperController.MAX_ROWS) {\n                MinesweeperController.cols = MinesweeperController.MAX_ROWS;\n            }\n\n            MinesweeperController.buildBoard();\n        });\n\n        MinesweeperController.buildBoard = buildBoard;\n        function buildBoard() {\n            MinesweeperController.cells = [];\n\n            MinesweeperController.cellCount = MinesweeperController.cols * MinesweeperController.rows;\n            for (var i = 0; i < MinesweeperController.cellCount; i++) {\n                var cell = {};\n\n                cell.hasFlag = false;\n                cell.hasMine = Math.random() <= MinesweeperController.minePercent;\n                cell.isUnknown = true;\n\n                var col = i % MinesweeperController.cols;\n                var row = Math.floor(i / MinesweeperController.cols);\n\n                cell.col = col;\n                cell.row = row;\n\n                if (col === 0) {\n                    MinesweeperController.cells[row] = [];\n                }\n\n                MinesweeperController.cells[row][col] = cell;\n            }\n\n            for (var j = 0; j < MinesweeperController.rows; j++) {\n                for (var k = 0; k < MinesweeperController.cols; k++) {\n                    MinesweeperController.cells[j][k].touches = MinesweeperController.countTouches(MinesweeperController.cells[j][k]);\n                }\n            }\n        }\n\n        MinesweeperController.click = click;\n        function click(cell) {\n            cell.isUnknown = false;\n        }\n\n        MinesweeperController.countTouches = countTouches;\n        function countTouches(cell) {\n            var col = cell.col;\n            var row = cell.row;\n\n            var touches = 0;\n            if (col !== 0 && MinesweeperController.cells[row][col - 1].hasMine) {\n                // LEFT\n                touches++;\n            }\n            if (col + 1 !== MinesweeperController.cols && MinesweeperController.cells[row][col + 1].hasMine) {\n                // RIGHT\n                touches++;\n            }\n            if (row !== 0 && MinesweeperController.cells[row - 1][col].hasMine) {\n                // TOP\n                touches++;\n            }\n            if (row + 1 !== MinesweeperController.rows && MinesweeperController.cells[row + 1][col].hasMine) {\n                // BOTTOM\n                touches++;\n            }\n            if (col !== 0 && row + 1 !== MinesweeperController.rows && MinesweeperController.cells[row + 1][col - 1].hasMine) {\n                // BOTTOM LEFT\n                touches++;\n            }\n            if (col + 1 !== MinesweeperController.cols && row + 1 !== MinesweeperController.rows && MinesweeperController.cells[row + 1][col + 1].hasMine) {\n                // BOTTOM RIGHT\n                touches++;\n            }\n            if (col !== 0 && row !== 0 && MinesweeperController.cells[row - 1][col - 1].hasMine) {\n                // TOP LEFT\n                touches++;\n            }\n            if (col + 1 !== MinesweeperController.cols && row !== 0 && MinesweeperController.cells[row - 1][col + 1].hasMine) {\n                // TOP RIGHT\n                touches++;\n            }\n\n            return touches;\n        }\n\n        MinesweeperController.get = get;\n        function get(alpha, beta) {\n            var value = null;\n\n            if (typeof alpha === 'undefined') {\n                if (typeof beta !== 'undefined') {\n                    value = beta;\n                }\n            }\n\n            return value;\n        }\n\n        MinesweeperController.reset = reset;\n        function reset() {}\n\n        MinesweeperController.init = init;\n        function init() {\n            MinesweeperController.reset();\n        }\n\n        MinesweeperController.init();\n    }\n})();\n(function () {\n    'use strict';\n\n    angular.module('minesweeper').directive('minesweeper', minesweeper);\n\n    function minesweeper() {\n        return {\n            controller: 'MinesweeperController',\n            controllerAs: 'ctrl',\n            restrict: 'E',\n            scope: {\n                cols: '=',\n                minePercent: '=',\n                rows: '='\n            },\n            template: '<div class=\"row\" data-ng-repeat=\"cols in ctrl.cells\"><div data-ng-repeat=\"cell in cols\" class=\"col cell\" data-ng-class=\"{ \\'clear\\': !cell.isUnknown && !cell.hasMine && cell.touches === 0, \\'mine\\': !cell.isUnknown && cell.hasMine, \\'safe\\': !cell.isUnknown && !cell.hasMine && cell.touches !== 0, \\'flag\\': cell.isUnknown && cell.hasFlag, \\'unknown\\': cell.isUnknown && !cell.hasFlag, \\'touches-0\\': cell.touches === 0, \\'touches-1\\': cell.touches === 1, \\'touches-2\\': cell.touches === 2, \\'touches-3\\': cell.touches === 3, \\'touches-4\\': cell.touches === 4, \\'touches-5\\': cell.touches === 5, \\'touches-6\\': cell.touches === 6, \\'touches-7\\': cell.touches === 7, \\'touches-8\\': cell.touches === 8 }\" data-ng-click=\"ctrl.click(cell)\">{{ cell.hasMine ? \\'X\\' : cell.touches }}</div></div>'\n        };\n    }\n})();\n\n},{}]},{},[1]);\n"],"file":"minesweeper.bundle.js"}